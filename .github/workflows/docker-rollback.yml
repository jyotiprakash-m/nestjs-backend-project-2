name: Docker Deployment Rollback

on:
  workflow_dispatch:
    inputs:
      new-version:
        description: 'Version to rollback to (e.g. 1.1.1)'
        required: true
        default: '1.1.1'
      current-version:
        description: 'current version (e.g. 1.1.2)'
        required: true
        default: '1.1.2'

jobs:
  rollback:
    runs-on: ubuntu-latest
    
    steps:
        - name: Deploy rollback on EC2
          uses: appleboy/ssh-action@v0.1.7
          env:
            DOCKER_IMAGE: ${{ secrets.DOCKER_USERNAME }}/vdr-services
            IMAGE_TAG: ${{ secrets.SERVICE_NAME }}
            NEW_VERSION: ${{ github.event.inputs.new-version }}
            CURRENT_VERSION: ${{ github.event.inputs.current-version }}
          with:
            host: ${{ secrets.EC2_HOST }}
            username: ${{ secrets.EC2_USER }}
            key: ${{ secrets.EC2_SSH_KEY }}
            script: |
                # Verify Docker is running
                sudo systemctl status docker || sudo systemctl start docker
            
                # Login to Docker Hub
                echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
            
                # Pull previous version
                echo "Rolling back to version ${{ github.event.inputs.new-version }}"
                sudo docker pull ${{ secrets.DOCKER_USERNAME }}/vdr-services:${{ secrets.SERVICE_NAME }}-${{github.event.inputs.new-version}})
            
                # Stop current container 
                sudo docker stop service-${{ github.event.inputs.current-version }} || true
                sudo docker rm service-${{ github.event.inputs.current-version }} || true
            
                # Start previous version 
                sudo docker run -d \
                --name service-${{ github.event.inputs.new-version }} \
                -p ${{ secrets.APP_PORT }}:3000 \
                ${{ secrets.DOCKER_USERNAME }}/vdr-services:${{ github.event.inputs.new-version }}


                # Verify the container is running
                echo "Verifying the container is running..."
                sudo docker ps -a | grep ${{ secrets.SERVICE_NAME }}

                # Log the image ID for reference
                echo "Deployed image ID: $(sudo docker images -q ${{ secrets.DOCKER_USERNAME }}/vdr-services:${{ secrets.SERVICE_NAME }}-${{ github.event.inputs.current-version }})"

                 # Cleanup dangling images & unused Docker data
                echo "Cleaning up unused Docker data..."
                sudo docker system prune -af